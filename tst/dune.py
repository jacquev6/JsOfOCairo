#!/usr/bin/env python3

# Copyright 2018 Vincent Jacques <vincent@vincent-jacques.net>

import sys
import os


def gen(flavor):
    yield '(executable'
    yield '  (name tests_in_native)'
    yield '  (modules tests_in_native)'
    yield '  (libraries Tests cairo2)'
    if flavor == "coverage":
        yield '  (preprocess (pps bisect_ppx))'
    yield ')'
    yield ''
    yield '(rule'
    yield '  (targets tests_in_native.sentinel)'
    yield '  (deps tests_in_native.exe)'
    yield '  (action (progn'
    yield '    (run %{bin:mkdir} -p Tests/Drawing/Cairo)'
    yield '    (run %{bin:mkdir} -p Tests/Limitations)'
    yield '    (run %{exe:tests_in_native.exe})'
    yield '    (write-file tests_in_native.sentinel sentinel)'
    yield '  ))'
    yield ')'
    yield ''
    yield '(alias'
    yield '  (name runtest)'
    yield '  (deps tests_in_native.sentinel)'
    yield ')'
    yield ''
    yield ''
    yield '(rule'
    yield '  (targets node_modules.sentinel)'
    yield '  (deps npm-install.sh)'
    yield '  (action (progn'
    yield "    (system \"./npm-install.sh 'canvas@>=1.6.10 <2' 'pixelmatch@>=4.0.2 <5' browserify\")"
    yield '    (write-file node_modules.sentinel sentinel)'
    yield '  ))'
    yield ')'
    yield ''
    yield ''
    yield "; tests_in_node can't run during `opam install JsOfOCairo --build-test`:"
    yield '; with opam 2, the sandbox mode forbids downloading npm dependencies.'
    yield '; So, we use the runtest-full alias to run them in our dev cycle script'
    yield ''
    yield '(executable'
    yield '  (name tests_in_node)'
    yield '  (modules tests_in_node)'
    yield '  (libraries Tests JsOfOCairo)'
    yield '  (preprocess (pps js_of_ocaml-ppx))'
    yield '  (js_of_ocaml (flags ("+nat.js")))'
    yield ')'
    yield ''
    yield '(rule'
    yield '  (targets tests_in_node.sentinel)'
    yield '  (deps node_modules.sentinel tests_in_node.bc.js tests_in_native.sentinel)'
    yield '  (action (progn'
    yield '    (run %{bin:mkdir} -p Tests/Drawing/JsOfOCairo)'
    yield '    (run %{bin:node} tests_in_node.bc.js)'
    yield '    (write-file tests_in_node.sentinel sentinel)'
    yield '  ))'
    yield ')'
    yield ''
    yield '(alias'
    yield '  (name runtest-full)'
    yield '  (deps tests_in_node.sentinel)'
    yield ')'
    yield ''
    yield ''
    yield '(rule'
    yield '  (targets pixelmatch.js)'
    yield '  (deps node_modules.sentinel)'
    yield '  (action (progn'
    yield '    (with-stdout-to %{targets} (system "node_modules/.bin/browserify -s pixelmatch node_modules/pixelmatch/index.js"))'
    yield '  ))'
    yield ')'
    yield ''
    yield '(executable'
    yield '  (name tests_in_browser)'
    yield '  (modules tests_in_browser)'
    yield '  (libraries Tests JsOfOCairo)'
    yield '  (preprocess (pps js_of_ocaml-ppx))'
    yield '  (js_of_ocaml (flags ("+nat.js")))'
    yield ')'
    yield ''
    yield '(alias'
    yield '  (name runtest-full)'
    yield '  (deps tests_in_browser.html pixelmatch.js tests_in_browser.bc.js tests_in_native.sentinel)'
    yield ')'

for line in gen(sys.argv[1]):
    print(line)
